# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1H4-PVkixYgvV-FTx53VqL1G25LCENLVP
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import os
import sys

sns.set()

def plota_pivot_table(df, value, index, func, ylabel, xlabel, opcao='nada'):
    if opcao == 'nada':
        pd.pivot_table(df, values=value, index=index, aggfunc=func).plot(figsize=[15, 5])
    elif opcao == 'unstack':
        pd.pivot_table(df, values=value, index=index, aggfunc=func).unstack().plot(figsize=[15, 5])
    elif opcao == 'sort':
        pd.pivot_table(df, values=value, index=index, aggfunc=func).sort_values(value).plot(figsize=[15, 5])
    plt.ylabel(ylabel)
    plt.xlabel(xlabel)
    return None

def processar_mes(df, mes_num, mes_abrev, ano):
    df['DTNASC'] = pd.to_datetime(df['DTNASC'])
    filtro = (df['DTNASC'].dt.month == mes_num) & (df['DTNASC'].dt.year == ano)
    sinasc = df[filtro]

    max_data = f"{ano}-{mes_num:02d}"
    print(f"Gerando gráficos para {mes_abrev}: {max_data}")

    os.makedirs(f'./output/figs/{max_data}', exist_ok=True)

    plota_pivot_table(sinasc, 'IDADEMAE', 'DTNASC', 'mean', 'Média idade mãe por data', 'Data nascimento')
    plt.savefig(f'./output/figs/{max_data}/media_idade_mae_por_data.png')
    plt.close()

    plota_pivot_table(sinasc, 'IDADEMAE', ['DTNASC', 'SEXO'], 'mean', 'Média idade mãe', 'Data de nascimento', 'unstack')
    plt.savefig(f'./output/figs/{max_data}/media_idade_mae_por_sexo.png')
    plt.close()

    plota_pivot_table(sinasc, 'PESO', ['DTNASC', 'SEXO'], 'mean', 'Média peso bebê', 'Data de nascimento', 'unstack')
    plt.savefig(f'./output/figs/{max_data}/media_peso_bebe_por_sexo.png')
    plt.close()

    plota_pivot_table(sinasc, 'PESO', 'ESCMAE', 'median', 'Peso mediano', 'Escolaridade mãe', 'sort')
    plt.savefig(f'./output/figs/{max_data}/peso_mediano_por_escolaridade_mae.png')
    plt.close()

    plota_pivot_table(sinasc, 'APGAR1', 'GESTACAO', 'mean', 'APGAR1 médio', 'Gestação', 'sort')
    plt.savefig(f'./output/figs/{max_data}/media_apgar1_por_gestacao.png')
    plt.close()

def gerar_graficos_para_meses(df, abreviacoes, ano):
    meses_dict = {
        "JAN": 1, "FEV": 2, "MAR": 3, "ABR": 4, "MAI": 5,
        "JUN": 6, "JUL": 7, "AGO": 8, "SET": 9, "OUT": 10,
        "NOV": 11, "DEZ": 12
    }

    for abrev in abreviacoes:
        mes_num = meses_dict.get(abrev.upper())
        if mes_num:
            processar_mes(df, mes_num, abrev, ano)
        else:
            print(f"Abreviatura de mês inválida: {abrev}")

# Carregar os dados completos
sinasc = pd.read_csv('C:\\Users\\pablo\\SINASC_RO_2019.csv')

# Obter os argumentos da linha de comando
abreviacoes = sys.argv[1:]
ano = 2019

# Chamar a função principal
gerar_graficos_para_meses(sinasc, abreviacoes, ano)